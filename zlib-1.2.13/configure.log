--------------------
./configure --static --archs=-arch arm64
2023年 7月12日 星期三 17时48分20秒 CST
Checking for gcc...
=== ztest17815.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest17815.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest17815.c ===
int foo() { return 0; }
===
gcc -c -fPIC -arch arm64 ztest17815.c

Building static library libz.a version 1.2.13 with gcc.

=== ztest17815.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking for size_t... Yes.

=== ztest17815.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -fPIC -arch arm64 -D_LARGEFILE64_SOURCE=1 ztest17815.c
ztest17815.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h:31:33: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest17815.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -fPIC -arch arm64 -o ztest17815 ztest17815.c
Checking for fseeko... Yes.

=== ztest17815.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -fPIC -arch arm64 -o ztest17815 ztest17815.c
Checking for strerror... Yes.

=== ztest17815.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking for unistd.h... Yes.

=== ztest17815.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking for stdarg.h... Yes.

=== ztest17815.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest17815.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -fPIC -arch arm64 -o ztest17815 ztest17815.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest17815.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking for return value of vsnprintf()... Yes.

=== ztest17815.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -fPIC -arch arm64 ztest17815.c
Checking for attribute(visibility) support... Yes.

ALL = static
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -fPIC -arch arm64 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch arm64
LDSHARED = gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -fPIC -fPIC -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


